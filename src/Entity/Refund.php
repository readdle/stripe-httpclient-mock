<?php
declare(strict_types=1);

namespace Readdle\StripeHttpClientMock\Entity;

class Refund extends AbstractEntity
{
    protected array $props = [
        'amount' => 0, //  * @property int Amount, in %s.
        'balance_transaction' => null, //  * @property null|string|\Stripe\BalanceTransaction Balance transaction that describes the impact on your account balance.
        'charge' => null, //  * @property null|string|\Stripe\Charge ID of the charge that was refunded.
        'created' => 0, //  * @property int Time at which the object was created. Measured in seconds since the Unix epoch.
        'currency' => 'usd', //  * @property string Three-letter <a href="https://www.iso.org/iso-4217-currency-codes.html">ISO currency code</a>, in lowercase. Must be a <a href="https://stripe.com/docs/currencies">supported currency</a>.
        'description' => null, //  * @property null|string An arbitrary string attached to the object. Often useful for displaying to users. (Available on non-card refunds only)
        'failure_balance_transaction' => null, //  * @property null|string|\Stripe\BalanceTransaction If the refund failed, this balance transaction describes the adjustment made on your account balance that reverses the initial balance transaction.
        'failure_reason' => null, //  * @property null|string If the refund failed, the reason for refund failure if known. Possible values are <code>lost_or_stolen_card</code>, <code>expired_or_canceled_card</code>, <code>charge_for_pending_refund_disputed</code>, <code>insufficient_funds</code>, <code>declined</code>, <code>merchant_request</code> or <code>unknown</code>.
        'instructions_email' => null, //  * @property null|string For payment methods without native refund support (e.g., Konbini, PromptPay), email for the customer to receive refund instructions.
        'metadata' => [], //  * @property null|\Stripe\StripeObject Set of <a href="https://stripe.com/docs/api/metadata">key-value pairs</a> that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
         'next_action' => null,
        'payment_intent' => null, //  * @property null|string|\Stripe\PaymentIntent ID of the PaymentIntent that was refunded.
        'reason' => null, //  * @property null|string Reason for the refund, either user-provided (<code>duplicate</code>, <code>fraudulent</code>, or <code>requested_by_customer</code>) or generated by Stripe internally (<code>expired_uncaptured_charge</code>).
        'receipt_number' => null, //  * @property null|string This is the transaction number that appears on email receipts sent for this refund.
        'source_transfer_reversal' => null, //  * @property null|string|\Stripe\TransferReversal The transfer reversal that is associated with the refund. Only present if the charge came from another Stripe account. See the Connect documentation for details.
        'status' => 'succeeded', //  * @property null|string Status of the refund. For credit card refunds, this can be <code>pending</code>, <code>succeeded</code>, or <code>failed</code>. For other types of refunds, it can be <code>pending</code>, <code>requires_action</code>, <code>succeeded</code>, <code>failed</code>, or <code>canceled</code>. Refer to our <a href="https://stripe.com/docs/refunds#failed-refunds">refunds</a> documentation for more details.
        'transfer_reversal' => null, //  * @property null|string|\Stripe\TransferReversal If the accompanying transfer was reversed, the transfer reversal object. Only applicable if the charge was created using the destination parameter.
    ];

    protected static array $expandableProps = [
        'balance_transaction','payment_intent'
    ];


}
